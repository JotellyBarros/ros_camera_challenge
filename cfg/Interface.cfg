#!/usr/bin/env python
PACKAGE = "ros_camera_challenge"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

resolution_enum = gen.enum([gen.const("QQVGA",        int_t, 0, "A QQVGA Resolution 4:3"),
                            gen.const("QVGA",         int_t, 1, "A QVGA Resolution 4:3"),
                            gen.const("VGA",          int_t, 2, "A VGA Resolution 4:3"),
                            gen.const("VGAp",         int_t, 3, "A VGA Resolution 4:3"),
                            gen.const("SVGA",         int_t, 4, "A SVGA Resolution 4:3"),
                            gen.const("XGA",          int_t, 5, "A XGA Resolution 4:3"),
                            gen.const("WXGA_HD",      int_t, 6, "A WXGA-HD/720p Resolution 16:9"),
                            gen.const("WXGA",         int_t, 7, "A WXGA Resolution 16:9"),
                            gen.const("WXGAp",        int_t, 8, "A WXGAp Resolution 16:10"),
                            gen.const("UXGA",         int_t, 9, "A UXGA Resolution 16:9"),
                            gen.const("UXGApp",       int_t, 10, "A UXGApp Resolution 16:10"),
                            gen.const("Full_HD",      int_t, 11, "A Full HD/1080p Resolution 16:9")],
                            "An enum to set imageMode")
gen.add("resolution", int_t, 0, "A imageMode parameter which is edited via an enum", 3, 0, 11, edit_method=resolution_enum)

#-------------------------------------------------------------------------------------------------------------------------

gen.add("contrast",       int_t,    0, "Set contrast ", 50,  0, 100)
gen.add("brightness",     int_t,    0, "Set brightness ", 50,  0, 100)
gen.add("crop_height",    int_t,    0, "set crop_height", 0,  0, 100)
gen.add("crop_width",     int_t,    0, "set crop_width", 0,  0, 100)
gen.add("rotation",       int_t,    0, "set rotation", 50,  -100, 100)
gen.add("rescale_factor", double_t, 0, "set rescale_factor", .1,  .1, 1)
gen.add("exposure_time",  double_t, 0, "set exposure_time", .1, .1, 100)

exit(gen.generate(PACKAGE, "ros_camera_challenge", "Interface"))

#rosrun rqt_reconfigure rqt_reconfigure
